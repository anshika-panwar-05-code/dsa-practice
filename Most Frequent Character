Given a string s of lowercase alphabets. The task is to find the
maximum occurring character in the string s. If more than one
character occurs the maximum number of
times then print the lexicographically smaller character.


class Solution {
    public char getMaxOccuringChar(String s) {
        // code here
    char[] ch= s.toCharArray();
    
    HashMap<Character,Integer> map= new HashMap<>();
    
    
    for(int i=0;i<ch.length;i++){
        map.put(ch[i],map.getOrDefault(ch[i],0)+1);
    }
    
    int max=Integer.MIN_VALUE;
    char ans=' ';
    for(Map.Entry<Character,Integer> entry:map.entrySet()){
        
        char key=entry.getKey();
        int value= entry.getValue();
        
        if(value>max){
            max= value;
            ans=key;
        }
        else if(value==max && key<ans){
            ans= key;
        }
        
        
    }
  return ans;
    
    
    }
}
